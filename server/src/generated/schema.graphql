### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Attendance timestamp for logging work hours"""
type Attendance {
  entryAt: String!
  id: ID!
  leaveAt: String
  user: User!
  userId: String!
}

"""User credentials"""
input Credentials {
  password: String!
  username: String!
}

"""Result for indicating that the credentials are invalid"""
type InvalidCredentials {
  password: String!
}

"""Result of a log in mutation"""
union LoginResult = InvalidCredentials | UserCredentials | UserNotFound

type Mutation {
  """Log-in mutation with credentials"""
  login(credential: Credentials!): LoginResult!

  """Sign-up mutation with credentials"""
  signup(credential: Credentials!): SignUpResult!
}

type Query {
  """Gettings all employees"""
  employees: [User!]!

  """Me query"""
  me: User
}

"""Result of a sign up mutation"""
union SignUpResult = InvalidCredentials | UserAlreadyExist | UserCredentials

"""User object type for each employee signed-in"""
type User {
  attendances: [Attendance!]!
  id: ID!
  name: String!
}

"""Result for indicating that user already exists"""
type UserAlreadyExist {
  username: String!
}

"""Wrapper for user with jwt"""
type UserCredentials {
  token: String!
  user: User!
}

"""Result for indicating that no user of that credentials is found"""
type UserNotFound {
  username: String!
}
